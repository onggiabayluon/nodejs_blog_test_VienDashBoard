<style>
    .img__PlaceholderLoader {
        height: auto;
        display: inline-block;
        vertical-align: top;
    }

    /* image__dummy image styles */
    .image__dummy {
        box-sizing: border-box;
        display: inline-block;
        position: relative;
    }

    .image__dummy:before {
        content: '';
        position: absolute;
        background: #fff;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }

    .image__dummy:after {
        content: attr(width) " x "attr(height);
        white-space: pre;
        color: #fff;
        text-align: center;
        display: block;
        position: absolute;
        width: 100%;
        top: calc(50% - .5em);
        font-size: 100%;
    }

    .image__dummy.image__dummy--alt:after {
        content: attr(image__dummy--alt);
    }

    .image {
        position: relative;
        background: url('/img/loading-placeholder.svg') center center no-repeat;
        background-size: 300px 100px;
        text-align: center;
    }

    .image__Frame {
        color: #fff;
        border-color: #000;
        border-image: initial;
        border-style: none;
        border-width: medium;
        height: auto;
        margin-bottom: 0;
        margin-left: auto;
        margin-right: auto;
        max-width: 100%;
        width: auto;
        z-index: 999;
        position: relative;
    }


    @media only screen and (max-width: 550px) {
        .image__Frame {
            width: 400px;
            min-height: 400px;
        }
    }


    @media only screen and (min-width: 550px) {
        .image__Frame {
            width: 700px;
            min-height: 700px;
        }
    }


    @media only screen and (min-width: 850px) {
        .image__Frame {
            width: 1000px;
            min-height: 1000px;
        }
    }
</style>

{{!-- show images --}}
{{#each chapter.image}}
<div class="image">
    <picture class="lazy">
        <source id="image--Main" 
        data-srcset="https://s3.eu-central-1.wasabisys.com/cloudimagewallbucket/{{this.url}}"
        data-srcmain="https://s3.eu-central-1.wasabisys.com/cloudimagewallbucket/{{this.url}}-large.jpeg" 
        type="image/jpeg" />

        <img 
        data-srcset="https://s3.eu-central-1.wasabisys.com/cloudimagewallbucket/{{this.url}}-large.jpeg" 
        class="image__Frame" onerror="this.onerror=null;this.src='/img/404.jpg';" />
    </picture>
</div>
{{/each}} {{!-- üõë End show images --}}

{{!-- POST Comment --}}
<div class="container mt-5">
    <div class="d-flex justify-content-center row">
        <div class="col-md-10">
            {{#if user}}
            <form id="postCommentForm" method="POST" onsubmit="return postComment(this);"
                enctype="application/x-www-form-urlencoded">
                <input class="form-control" name="title" value="{{chapter.title}}" type="hidden"></input>
                <input class="form-control" name="userId" value="{{user._id}}" type="hidden"></input>
                <input class="form-control" name="userName" value="{{user.name}}" type="hidden"></input>
                <input class="form-control" name="chapter" value="{{chapter.chapter}}" type="hidden"></input>
                <input id="comicSlugInput" class="form-control" name="comicSlug" value="{{chapter.comicSlug}}"
                    type="hidden"></input>

                <div class="mb-3">
                    <label>Comment</label>
                    <textarea class="form-control" name="inputText" placeholder="Type something"></textarea>
                </div>
                <button type="submit" class="btn btn-block btn-primary default mb-1 mx-auto d-block ">
                    Post comment</button>
            </form>
            {{else}}
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">BaÃ£n c√¢ÃÄn ƒëƒÉng nh√¢Ã£p ƒë√™Ãâ comment</h5>
                    <a href="/users/login" class="btn btn-primary">ƒêƒÉng nh√¢Ã£p</a>
                    <a href="/users/register" class="btn btn-primary">ƒêƒÉng KyÃÅ</a>
                </div>
            </div>
            {{/if}}
        </div>
    </div>
</div> {{!-- üõë End POST Comment --}}


{{!-- Show Comment BOX --}}
{{#if commentArr}}
    {{#each commentArr}}
        <div id="comment-{{this._id}}">
        <div id="comment__container" class="container mt-2">
            <div class="d-flex justify-content-center row">
                <div class="col-md-10">
                    <div class="d-flex flex-column comment-section">
                        <div class="bg-white p-2">
                            {{!-- Start delete comment form --}}
                            {{#ifCond this.userId '== (string)' ../user._id}}
                            <form id="destroyCommentForm" method="POST" onsubmit="return destroyComment(this);"
                                enctype="application/x-www-form-urlencoded">
                                <input class="form-control" name="comment_id" value="{{../this._id}}" type="hidden"></input>
                                <input class="form-control" name="comicSlug" value="{{../../chapter.comicSlug}}" type="hidden"></input>
                                <input class="form-control" name="chapter" value="{{../../chapter.chapter}}" type="hidden"></input>
                                <button type="submit" class="close" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button> 
                            </form>
                            {{/ifCond}} {{!-- üõë End delete comment form --}}
                            <div class="d-flex flex-row user-info">
                                <img class="rounded-circle" src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                                <div class="d-flex flex-column justify-content-start ml-2">
                                    <span class="d-block font-weight-bold name">{{this.userName}}</span>
                                    <span class="date text-black-50">Shared publicly - Jan 2020</span>
                                </div>
                            </div>
                            <div class="mt-2">
                                <p class="comment-text">{{this.text}}</p>
                            </div>
                        </div>
                        <div class="d-flex justify-content-üõë End row">
                            <div class="col-md-12" style="margin-top: -1rem;">

                                <div class="bg-white">
                                    <div class="reply__parent d-flex flex-row fs-12">
                                        <div class="like p-2 cursor"><i class="fa fa-thumbs-o-up"></i><span
                                                class="ml-1">Like</span></div>
                                        <div id="replyBtn" class="like p-2 cursor"><i class="fa fa-commenting-o"></i><span
                                                class="ml-1">Reply</span></div>
                                        <div class="like p-2 cursor"><i class="fa fa-share"></i><span class="ml-1">Share</span>
                                        </div>
                                    </div>
                                </div>

                                {{!-- Display Reply --}}
                                <div id="reply__ofcomment-{{this._id}}"> 
                                    {{#each reply}}
                                    <div id="reply-{{this._id}}" class="container mt-2">
                                        <div class="d-flex justify-content-üõë End row">
                                            <div class="col-md-10">
                                                <div class="d-flex flex-column comment-section">
                                                    <div class="bg-white p-2">
                                                        {{!-- Start delete reply form --}}
                                                        {{#ifCond this.userId '== (string)' ../../user._id}}
                                                        <form id="destroyReplyForm" method="POST" onsubmit="return destroyReply(this);"
                                                            enctype="application/x-www-form-urlencoded">
                                                            <input name="reply_id" value="{{../this._id}}" type="hidden"></input>
                                                            <input name="comment_id" value="{{../../this._id}}" type="hidden"></input>
                                                            <input class="form-control" name="title" value="{{../../../chapter.title}}" type="hidden"></input>
                                                            <input name="comicSlug" value="{{../../../chapter.comicSlug}}" type="hidden"></input>
                                                            <input name="chapter" value="{{../../../chapter.chapter}}" type="hidden"></input>
                                
                                                            <button type="submit" class="close" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </form>
                                                        {{/ifCond}} {{!-- üõë End delete reply form --}}
                                                        <div class="d-flex flex-row user-info"><img class="rounded-circle"
                                                                src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                                                            <div class="d-flex flex-column justify-content-start ml-2"><span
                                                                    class="d-block font-weight-bold name">{{this.userName}}</span><span
                                                                    class="date text-black-50">Shared publicly - Jan 2020</span>
                                                            </div>
                                                        </div>
                                                        <div class="mt-2">
                                                            <p class="comment-text">{{this.text}}</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    {{/each}} 
                                </div> {{!-- üõë End Display Reply --}}
                                
                                {{#if ../user}}
                                <div id="replyBox" class="col-md-10 replyBox bg-light p-2 d-none" style="margin-left: auto;">
                                    {{!-- Start Reply Form --}}
                                    <form id="replyForm" method="POST" onsubmit="return postReply(this);"
                                        enctype="application/x-www-form-urlencoded">
                                        <input class="form-control" name="userId" value="{{../user._id}}" type="hidden"></input>
                                        <input class="form-control" name="userName" value="{{../user.name}}"
                                            type="hidden"></input>
                                        <input class="form-control" name="comment_id" value="{{this._id}}" type="hidden"></input>
                                        <input class="form-control" name="chapter" value="{{../chapter.chapter}}"
                                            type="hidden"></input>
                                        <input id="comicSlugInput" class="form-control" name="comicSlug"
                                            value="{{../chapter.comicSlug}}" type="hidden"></input>
                                        <div class="d-flex flex-row align-items-start"><img class="rounded-circle"
                                                src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                                            <textarea class="form-control" name="inputText" placeholder="Type something"
                                                class="form-control ml-1 shadow-none textarea"></textarea>
                                        </div>
                                        <div class="mt-2 text-right">
                                            <button type="submit" class="btn btn-primary btn-sm shadow-none">Reply
                                                comment</button>
                                            <button type="button"
                                                class="btn btn-outline-primary btn-sm ml-1 shadow-none">Cancel</button>
                                        </div>
                                    </form>
                                </div>
                                {{/if}}{{!-- üõë End Reply Form --}}

                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
        </div>
    {{/each}}
{{/if}} {{!-- üõë End Show Comment BOX --}}


{{!-- Comment Template --}}
<script id="comment-template" type="text/x-handlebars-template">
<div id="comment__container" class="container mt-2">
    <div class="d-flex justify-content-center row">
        <div class="col-md-10">
            <div class="d-flex flex-column comment-section">
                <div class="bg-white p-2">
                    {{!-- Start delete comment form --}}
                    \{{#ifCond new_comment.userId '== (string)' new_comment.reqUserId}}
                    <form id="destroyCommentForm" method="POST" onsubmit="return destroyComment(this);"
                        enctype="application/x-www-form-urlencoded">
                        <input class="form-control" name="comment_id" value="\{{new_comment.comment_id}}" type="hidden"></input>
                        <input class="form-control" name="comicSlug" value="\{{new_comment.comicSlug}}" type="hidden"></input>
                        <input class="form-control" name="chapter" value="\{{new_comment.chapter}}" type="hidden"></input>
                        <button type="submit" class="close" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button> 
                    </form>
                    \{{/ifCond}} {{!-- üõë End delete comment form --}}
                    
                    <div class="d-flex flex-row user-info"><img class="rounded-circle"
                            src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                        <div class="d-flex flex-column justify-content-start ml-2"><span
                                class="d-block font-weight-bold name">\{{this.userName}}</span><span
                                class="date text-black-50">Shared publicly - Jan 2020</span></div>
                    </div>
                    <div class="mt-2">
                        <p class="comment-text">\{{new_comment.inputText}}</p>
                    </div>
                </div>
                <div class="d-flex justify-content-üõë End row">
                    <div class="col-md-12" style="margin-top: -1rem; padding:unset">
                        <div class="bg-white">
                            <div class="reply__parent d-flex flex-row fs-12">
                                <div class="like p-2 cursor"><i class="fa fa-thumbs-o-up"></i><span
                                        class="ml-1">Like</span></div>
                                <div id="replyBtn" class="like p-2 cursor"><i class="fa fa-commenting-o"></i><span
                                        class="ml-1">Reply</span></div>
                                <div class="like p-2 cursor"><i class="fa fa-share"></i><span class="ml-1">Share</span>
                                </div>
                            </div>
                        </div>
                       {{!-- Display Reply --}}
                        <div id="reply__ofcomment-{{this._id}}">
                        </div>
                        \{{#if new_comment.reqUserId }}
                        <div id="replyBox" class="col-md-10 replyBox bg-light p-2 d-none" style="margin-left: auto;">
                            {{!-- Start Reply Form --}}
                            <form id="replyForm" method="POST" onsubmit="return postReply(this);"
                                enctype="application/x-www-form-urlencoded">
                                <input class="form-control" name="userId" value="\{{../user._id}}"
                                    type="hidden"></input>
                                <input class="form-control" name="userName" value="\{{../user.name}}"
                                    type="hidden"></input>
                                <input class="form-control" name="comment_id" value="\{{this._id}}"
                                    type="hidden"></input>
                                <input class="form-control" name="chapter" value="\{{../chapter.chapter}}"
                                    type="hidden"></input>
                                <input id="comicSlugInput" class="form-control" name="comicSlug"
                                    value="\{{../chapter.comicSlug}}" type="hidden"></input>
                                <div class="d-flex flex-row align-items-start"><img class="rounded-circle"
                                        src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                                    <textarea class="form-control" name="inputText" placeholder="Type something"
                                        class="form-control ml-1 shadow-none textarea"></textarea>
                                </div>
                                <div class="mt-2 text-right">
                                    <button type="submit" class="btn btn-primary btn-sm shadow-none">Reply
                                        comment</button>
                                    <button type="button"
                                        class="btn btn-outline-primary btn-sm ml-1 shadow-none">Cancel</button>
                                </div>
                            </form>
                        </div>
                        \{{/if}}{{!-- üõë End Reply Form --}}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</script> {{!-- üõë End comment template --}}


{{!-- reply Template --}}
<script id="reply-template" type="text/x-handlebars-template">
<div id="reply-\{{new_reply.reply_id}}" class="container mt-2">
    <div class="d-flex justify-content-üõë End row">
        <div class="col-md-10">
            <div class="d-flex flex-column comment-section">
                <div class="bg-white p-2">
                    {{!-- Start delete reply form --}}
                    \{{#ifCond new_reply.userId '== (string)' new_reply.reqUserId}}
                    <form id="destroyReplyForm" method="POST" onsubmit="return destroyReply(this);"
                        enctype="application/x-www-form-urlencoded">
                        <input name="reply_id" value="\{{new_reply.reply_id}}" type="hidden"></input>
                        <input name="comment_id" value="\{{new_reply.comment_id}}" type="hidden"></input>
                        <input name="comicSlug" value="\{{new_reply.comicSlug}}" type="hidden"></input>
                        <input name="chapter" value="\{{new_reply.chapter}}" type="hidden"></input>

                        <button type="submit" class="close" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </form>
                    \{{/ifCond}} {{!-- üõë End delete reply form --}}
                    <div class="d-flex flex-row user-info"><img class="rounded-circle"
                            src="https://i.imgur.com/RpzrMR2.jpg" width="40">
                        <div class="d-flex flex-column justify-content-start ml-2"><span
                                class="d-block font-weight-bold name">\{{new_reply.userName}}</span><span
                                class="date text-black-50">Shared publicly - Jan 2020</span>
                        </div>
                    </div>
                    <div class="mt-2">
                        <p class="comment-text">\{{new_reply.inputText}}</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
\{{#if new_comment.reqUserId}}
<div id="replyBox" class="col-md-10 replyBox bg-light p-2 d-none" style="margin-left: auto;">
    {{!-- Start Reply Form --}}
    <form id="replyForm" method="POST" onsubmit="return postReply(this);" enctype="application/x-www-form-urlencoded">
        <input class="form-control" name="userId" value="\{{../user._id}}" type="hidden"></input>
        <input class="form-control" name="userName" value="\{{../user.name}}" type="hidden"></input>
        <input class="form-control" name="comment_id" value="\{{this._id}}" type="hidden"></input>
        <input class="form-control" name="chapter" value="\{{../chapter.chapter}}" type="hidden"></input>
        <input id="comicSlugInput" class="form-control" name="comicSlug" value="\{{../chapter.comicSlug}}"
            type="hidden"></input>
        <div class="d-flex flex-row align-items-start"><img class="rounded-circle" src="https://i.imgur.com/RpzrMR2.jpg"
                width="40">
            <textarea class="form-control" name="inputText" placeholder="Type something"
                class="form-control ml-1 shadow-none textarea"></textarea>
        </div>
        <div class="mt-2 text-right">
            <button type="submit" class="btn btn-primary btn-sm shadow-none">Reply
                comment</button>
            <button type="button" class="btn btn-outline-primary btn-sm ml-1 shadow-none">Cancel</button>
        </div>
    </form>
</div>
\{{/if}}{{!-- üõë End Reply Form --}}                      
</script> {{!-- üõë End reply template --}}


{{!-- ReqUser_id --}}
<input type="hidden" name="input__ReqUserId" value="{{user._id}}">

{{!-- chapter _id --}}
<input type="hidden" name="input__chapterId" value="{{chapter._id}}">

<script src="/js/LazyLoader.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js"></script>
<script>
    $(document).ready(function () {

        /* local History */
        var url                 = window.location.href
        var pathname            = window.location.pathname.split('/');
        var chapterNameParams   = pathname[pathname.length - 1]
        var slugParams          = pathname[pathname.length - 3]
        var $chapterId          = $("input[type=hidden][name=input__chapterId]").val()
        var visited_comics      = JSON.parse(localStorage.getItem('visited_comics'));
        var visited_chapters    = JSON.parse(localStorage.getItem('visited_chapters'));
        var newComicList        
        var this_visit = {
            chapterNameList: [{chapter: chapterNameParams, _id: $chapterId}],
            chapterUrl: url,
            comicName: 'temp',
            comicUrl: 'temp',
            comicSlug: slugParams,
            imageUrl: 'temp'
        }

        if (visited_chapters == null) {

            visited_chapters = [$chapterId]

            localStorage.setItem('visited_chapters', JSON.stringify(visited_chapters));

        } else {

            var isvisited = chapterisvisited(visited_chapters)
            
            if (isvisited != true) {

                newChapterList = appendObjTo(visited_chapters, $chapterId)

                localStorage.setItem('visited_chapters', JSON.stringify(newChapterList));
            }
        }

        
        /* if not have visited_comics -> add it with chapters */
        if (visited_comics == null) {

            localStorage.setItem('visited_comics', JSON.stringify([this_visit]));
            
        } else { 
            /* if have local_slug -> check if isviewed */

            var visitResult  = isViewed(visited_comics)

            if (visitResult.visit_thiscomic === false && visitResult.visit_thischapter === false) { 
                
                newComicList = appendObjTo(visited_comics, this_visit)

                localStorage.setItem('visited_comics', JSON.stringify(newComicList));

            }  
            if (visitResult.visit_thiscomic === true && visitResult.visit_thischapter === false) {
                // false: replace new and save

                const newchapterNameList = [...visited_comics[comic_index].chapterNameList, {chapter: chapterNameParams, _id: $chapterId}] // construct old chapter list '[]'
                console.table(newchapterNameList)
                this_visit.chapterNameList = newchapterNameList // replace old chapter list '[]'
                
                newComicList = [...visited_comics.filter(x => x.comicSlug != slugParams), this_visit] // replace old visited comics '[]'
                
                localStorage.setItem('visited_comics', JSON.stringify(newComicList));

            }
        };

        function isViewed(visited_comics) {
            var result = {
                visit_thiscomic: false,
                visit_thischapter: false,
                comic_index: 0,
                chapter_index: 0
            }
            for (let i = 0; i < visited_comics.length; i++) {
                if (visited_comics[i].comicSlug === slugParams) {
                    result.visit_thiscomic = true
                    comic_index = i 
                    for (let j = 0; j < visited_comics[i].chapterNameList.length; j++) {
                        if (visited_comics[i].chapterNameList[j].chapter === chapterNameParams) {
                            console.log(visited_comics[i].chapterNameList[j])
                            result.visit_thischapter = true
                            break;
                        }
                    }
                }
            }
            return result
        };

        function appendObjTo(thatArray, newObj) {
            const frozenObj = Object.freeze(newObj);
            return Object.freeze(thatArray.concat(frozenObj));
        };

        function chapterisvisited(visited_chapters) {
            var result = false
            for (let i = 0; i < visited_chapters.length; i++) {
                if (visited_chapters[i] === $chapterId) {
                    result = true
                    break
                }
            }
            return result
        }
        /* üõë End local History */

        /* Socket io */
        var socket = io()
        Handlebars.registerHelper('ifCond', function (a, operator, b, options) {
            switch (operator) {
                case '== (string)':
                    a = (!a) ? null : a.toString()
                    b = (!b) ? null : b.toString()
                    return (a == b) ? options.fn(this) : options.inverse(this);
                case '==':
                    return (a == b) ? options.fn(this) : options.inverse(this);
                case '===':
                    return (a === b) ? options.fn(this) : options.inverse(this);
                case '!=':
                    return (a != b) ? options.fn(this) : options.inverse(this);
                case '!==':
                    return (a !== b) ? options.fn(this) : options.inverse(this);
                case '<':
                    return (a < b) ? options.fn(this) : options.inverse(this);
                case '<=':
                    return (a <= b) ? options.fn(this) : options.inverse(this);
                case '>':
                    return (a > b) ? options.fn(this) : options.inverse(this);
                case '>=':
                    return (a >= b) ? options.fn(this) : options.inverse(this);
                case '&&':
                    return (a && b) ? options.fn(this) : options.inverse(this);
                case '||':
                    return (a || b) ? options.fn(this) : options.inverse(this);
                default:
                    return options.inverse(this);
            }
        })
        /* üõë End Socket io */

        /* Variables */
        var $reqUserId = $("input[type=hidden][name=input__ReqUserId]").val()
        console.log($reqUserId)
        var slug = $('#comicSlugInput').val()
        var replyBtn = $('[id=replyBtn]')
        var hiddenForm = document.forms['hidden-form'];
        var hiddenReplyForm = document.forms['hidden-reply-form'];
        var btnDeleteComment = document.getElementById('btn-delete-comment');
        var btnDeleteReply = document.getElementById('btn-delete-reply');
        var html = ''
        var templateObj = new Object()
        /* üõë End Variables */

        /* socket client catch */
        socket.on('new_comment', formData => {
            console.log(formData)
            formData['reqUserId'] = $reqUserId
            var source = document.getElementById("comment-template").innerHTML;
            var renderTemplate = Handlebars.compile(source);
            templateObj['new_comment'] = formData
            html = renderTemplate(templateObj);
            console.log(html)
            $('#comment__container').prepend(html)
        })
        socket.on('new_reply', formData => {
            console.log(formData)
            formData['reqUserId'] = $reqUserId
            var source = document.getElementById("reply-template").innerHTML;
            var renderTemplate = Handlebars.compile(source);
            templateObj['new_reply'] = formData
            html = renderTemplate(templateObj);
            console.log(html)
            $(`#reply__ofcomment-${formData.comment_id}`).append(html)
        })
        socket.on('delete_comment', formData => {
            $(`#comment-${formData.comment_id}`).remove()
        })
        socket.on('delete_reply', formData => {
            $(`#reply-${formData.reply_id}`).remove()
        })
        /* üõë End socket client catch */

        /* Start reply display */
        replyBtn.on('click', function (e) {
            var $thisReplyBox = $(e.target).parents(":eq(2)").siblings('#replyBox')
            $thisReplyBox.toggleClass('d-none')
            $('div#replyBox').each(function () {
                var $allReplyBox = $(this);
                $allReplyBox.not($thisReplyBox).addClass('d-none');
            });
        }) /* üõë End reply display */


        /* Start POST comment */
        window.postComment = function (form) {
            var formData = {
                title: form.title.value,
                userId: form.userId.value,
                userName: form.userName.value,
                inputText: form.inputText.value,
                comicSlug: form.comicSlug.value,
                chapter: form.chapter.value,
                updatedAt:  new Date().toISOString()
            }
            $.ajax({
                type: "POST",
                url: `/comic/comment`,
                data: JSON.stringify(formData),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    formData.comment_id = response.comment_id

                    /* console.log(formData) */

                    socket.emit('new_comment', formData)
                }
            })
            return false;
        }; /* üõë End POST comment */


        /* Start POST reply */
        window.postReply = function (form) {
            var formData = {
                title: form.title.value,
                userId: form.userId.value,
                userName: form.userName.value,
                comment_id: form.comment_id.value,
                inputText: form.inputText.value,
                comicSlug: form.comicSlug.value,
                chapter: form.chapter.value,
                updatedAt:  new Date().toISOString()
            }
            $.ajax({
                type: "POST",
                url: `/comic/reply`,
                data: JSON.stringify(formData),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    formData.reply_id = response.reply_id

                    /* console.log(formData) */

                    socket.emit('new_reply', formData) //Check new_reply
                }
            })
            return false;
        }; /* üõë End POST reply */


        /* Start destroy comment */
        window.destroyComment = function (form) {
            var formData = {
                comment_id: form.comment_id.value,
                comicSlug: form.comicSlug.value,
                chapter: form.chapter.value
            }
            if (confirm("BaÃ£n chƒÉÃÅc chƒÉÃÅn mu√¥ÃÅn xoÃÅa comment naÃÄy ?")) {
                $.ajax({
                    type: "POST",
                    url: `/comic/comment/destroyComment?_method=DELETE`,
                    data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        socket.emit('delete_comment', formData)
                    }
                })
            }
            return false;
        }; /* üõë End destroy comment */


        /* Start destroy reply */
        window.destroyReply = function (form) {
            var formData = {
                reply_id: form.reply_id.value,
                comment_id: form.comment_id.value,
                comicSlug: form.comicSlug.value,
                chapter: form.chapter.value
            }
            if (confirm("BaÃ£n chƒÉÃÅc chƒÉÃÅn mu√¥ÃÅn xoÃÅa Reply naÃÄy ?")) {
                $.ajax({
                    type: "POST",
                    url: `/comic/comment/destroyReply?_method=DELETE`,
                    data: JSON.stringify(formData),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        socket.emit('delete_reply', formData)
                    }
                })
            }
            return false;
        }; /* üõë End destroy reply */

    });
</script>